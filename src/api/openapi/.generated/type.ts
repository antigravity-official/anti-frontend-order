/* eslint-disable */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/order/{orderId}": {
    /**
     * Find order by id 
     * @description 주문정보와 배송정보를 리턴
     */
    get: operations["getOrderbyId"];
  };
  "/ship/{shipId}": {
    /**
     * Find ship by id 
     * @description 배송정보와 상품정보를 리턴
     */
    get: operations["getShipById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Order: {
      /**
       * Format: int64 
       * @example 10
       */
      id: number;
      /**
       * Format: date-time 
       * @example "2023-01-01T12:13:14.000Z"
       */
      orderAt: string;
      /**
       * Format: int64 
       * @example 77700
       */
      amount: number;
      ships: (components["schemas"]["Ship"])[];
    };
    Ship: {
      /**
       * Format: int64 
       * @example 8
       */
      id: number;
      /** @example T08912739410 */
      trackingNumber: string;
      /**
       * Format: int64 
       * @example 3000
       */
      shippingFee: number;
      /** @example 서울시 강남구 논현로 650-1 */
      address: string;
      /** @example 6106 */
      post: string;
      /** @example 안전한 배송 부탁드립니다. */
      message: string;
    };
    Product: {
      /**
       * Format: int64 
       * @example 8
       */
      id: number;
      /** @example 소울 라이트 */
      name: string;
      /**
       * Format: int64 
       * @example 3000
       */
      price: number;
      imageUrls: (string)[];
      stock: components["schemas"]["Stock"];
    };
    Stock: {
      /** @example SKIN */
      color: string;
      /** @example SKIN */
      band: string;
      /** @example SKIN */
      cup: string;
      /**
       * Format: int64 
       * @example 1
       */
      quantity: number;
    };
    ResOrder: {
      /**
       * Format: int64 
       * @example 1
       */
      orderId: number;
      ships?: (components["schemas"]["Ship"])[];
    };
    ResShip: {
      /**
       * Format: int64 
       * @example 1
       */
      shipId: number;
      products: (components["schemas"]["Product"])[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /**
   * Find order by id 
   * @description 주문정보와 배송정보를 리턴
   */
  getOrderbyId: {
    parameters: {
      path: {
        /** @description ID of pet to return */
        orderId: number;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["Order"];
        };
      };
      /** @description Invalid ID supplied */
      400: never;
      /** @description Order not found */
      404: never;
    };
  };
  /**
   * Find ship by id 
   * @description 배송정보와 상품정보를 리턴
   */
  getShipById: {
    parameters: {
      path: {
        /** @description ID of pet to return */
        shipId: number;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ResShip"];
        };
      };
      /** @description Invalid ID supplied */
      400: never;
      /** @description Ship not found */
      404: never;
    };
  };
}
